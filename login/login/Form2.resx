<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAEdAJYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6gaLJHy01rUH+HcPQ96v7aTbWxBlf2ZFkusMe4oIyWjHKA5C+
        wzTbfS7ezRY4IViRSSqxqAMnrWt5dN8oUDKX2c+n6U9IcdqteXSc0FDVjprL8wxU6j1FGF9KRBFg+lJU
        pI9ab16c0ARYpWX5TSn5evFJn3oFcasdIIhk1IOo5p+wUBcgEdDRnPSrCrTtlAyr5dBj4NWPLo8ugCn5
        Z9KKueSKKYEtFOzSUgG0c+tFJ+NABz603OKVmx/FVeSZVBO4YXk80DuTeYB1OPxpjzBT1H51katrlnpN
        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
        AbjRRRQB/9k=
</value>
  </data>
</root>